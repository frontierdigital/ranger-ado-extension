---
name: Release

on:
  push:
    tags:
      - "*"

jobs:
  build:
    runs-on: ubuntu-latest
    # outputs:
    #   node_version: ${{ steps.get_node_version.outputs.node_version }}
    #   tfx_cli_version: ${{ steps.get_tfx_cli_version.outputs.tfx_cli_version }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v3
        with:
          node-version-file: .nvmrc
      - run: npm ci
      - run: npm test
      - run: npm run release "${{ github.ref }}"
      - uses: actions/upload-artifact@v3
        with:
          name: dist
          path: ${{ github.workspace }}/dist/
          if-no-files-found: error
      # - id: get_node_version
      #   run: |
      #     node_version=$(cat "${GITHUB_WORKSPACE}/.nvmrc")
      #     echo "node_version=${node_version}" >> "$GITHUB_OUTPUT"
      # - id: get_tfx_cli_version
      #   run: |
      #     tfx_cli_version=$(cat "${GITHUB_WORKSPACE}/package.json" | jq -r ".dependencies[\"tfx-cli\"]")
      #     echo "tfx_cli_version=${tfx_cli_version}" >> "$GITHUB_OUTPUT"
  release:
    runs-on: ubuntu-latest
    # environment: visual-studio-marketplace
    needs: build
    steps:
      # - uses: actions/setup-node@v3
      #   with:
      #     node-version: ${{ needs.build.outputs.node_version }}
      # - run: npm install -g "tfx-cli@${{ needs.build.outputs.tfx_cli_version }}"
      - uses: actions/download-artifact@v3
        id: download
        with:
          name: dist
          path: ${{ github.workspace }}/dist/
      - uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: |
            ${{ github.workspace }}/dist/*.vsix
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          # body: |
          #   Changes in this Release
          #   - First Change
          #   - Second Change
          draft: true
          prerelease: ${{ endsWith(github.ref, 'pre') && true || false }}
      # - run: cat "${GITHUB_WORKSPACE}/package.json" | jq -r ".version"
      # - run: |
      #     npx tfx-cli extension publish \
      #       --vsix $(find ${{ steps.download.outputs.download-path }} -regex ".*\.\(vsix\)") \
      #       --service-url https://marketplace.visualstudio.com \
      #       --token "${{ secrets.VISUAL_STUDIO_MARKETPLACE_TOKEN }}" \
      #       --share-with "${{ secrets.VISUAL_STUDIO_MARKETPLACE_PUBLISHER }}"
